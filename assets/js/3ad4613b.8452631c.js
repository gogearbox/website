(self.webpackChunkgearbox_website=self.webpackChunkgearbox_website||[]).push([[664],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return l},kt:function(){return f}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=s(r),f=i,g=d["".concat(u,".").concat(f)]||d[f]||p[f]||o;return r?n.createElement(g,a(a({ref:t},l),{},{components:r})):n.createElement(g,a({ref:t},l))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=d;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var s=2;s<o;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2155:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return s},default:function(){return p}});var n=r(2122),i=r(9756),o=(r(7294),r(3905)),a={id:"routing-architecture",title:"Routing Architecture",sidebar_label:"Routing Architecture"},c=void 0,u={unversionedId:"routing-architecture",id:"routing-architecture",isDocsHomePage:!1,title:"Routing Architecture",description:"In Gearbox, we rely on Radix Tree algorithm for matching requests with user registered handlers (routing) and it's split in two phases",source:"@site/docs/routing-architecture.md",sourceDirName:".",slug:"/routing-architecture",permalink:"/docs/routing-architecture",editUrl:"https://github.com/gogearbox/website/edit/master/docs/routing-architecture.md",version:"current",frontMatter:{id:"routing-architecture",title:"Routing Architecture",sidebar_label:"Routing Architecture"},sidebar:"docs",previous:{title:"Roadmap",permalink:"/docs/roadmap"}},s=[{value:"References",id:"references",children:[]}],l={toc:s};function p(e){var t=e.components,r=(0,i.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"In Gearbox")," \u2699\ufe0f, we rely on ",(0,o.kt)("strong",{parentName:"p"},"Radix Tree algorithm")," for matching requests with user registered handlers (routing) and it's split in two phases"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Constructing Radix Tree"),(0,o.kt)("li",{parentName:"ul"},"Matching requests with user registered handlers using tree (our optimization focus is here to serve ",(0,o.kt)("strong",{parentName:"li"},"as fast as")," possible)")),(0,o.kt)("br",null),(0,o.kt)("p",{align:"center"},(0,o.kt)("img",{src:"https://user-images.githubusercontent.com/16365652/82431454-ef5b6800-9a8e-11ea-9a2a-717b19f29ff3.png",height:"300px"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"When user starts service"),', gearbox constructs a tree of prefixes by splitting each registered path by slash "/".\nEach node in tree represents a URL part (Keyword) and contains all information needed for routing (e.g. is this node will be used for match all, available methods and user registered handlers, middlewares, etc.)'),(0,o.kt)("h3",{id:"references"},"References"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Radix_tree"},"Radix Tree"))))}p.isMDXComponent=!0}}]);