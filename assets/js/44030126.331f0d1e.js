(self.webpackChunkgearbox_website=self.webpackChunkgearbox_website||[]).push([[563],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return c},kt:function(){return h}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),u=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(r),h=o,d=m["".concat(p,".").concat(h)]||m[h]||s[h]||a;return r?n.createElement(d,i(i({ref:t},c),{},{components:r})):n.createElement(d,i({ref:t},c))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4858:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return i},metadata:function(){return l},toc:function(){return p},default:function(){return c}});var n=r(2122),o=r(9756),a=(r(7294),r(3905)),i={id:"github-workflow",title:"GitHub workflow",sidebar_label:"GitHub workflow"},l={unversionedId:"github-workflow",id:"github-workflow",isDocsHomePage:!1,title:"GitHub workflow",description:"If you have never used git or GitHub, you may also need to check Hello World in GitHub Guides.",source:"@site/docs/github-workflow.md",sourceDirName:".",slug:"/github-workflow",permalink:"/docs/github-workflow",editUrl:"https://github.com/gogearbox/website/edit/master/docs/github-workflow.md",version:"current",sidebar_label:"GitHub workflow",frontMatter:{id:"github-workflow",title:"GitHub workflow",sidebar_label:"GitHub workflow"},sidebar:"docs",previous:{title:"Cloning and Installing",permalink:"/docs/cloning-and-installing"},next:{title:"Contributing",permalink:"/docs/contributing"}},p=[],u={toc:p};function c(e){var t=e.components,r=(0,o.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"If you have ",(0,a.kt)("strong",{parentName:"p"},"never")," used git or GitHub, you may also need to check ",(0,a.kt)("a",{parentName:"p",href:"https://guides.github.com/activities/hello-world/"},"Hello World in GitHub Guides"),"."),(0,a.kt)("p",null,"Firstly, You need to ",(0,a.kt)("a",{parentName:"p",href:"https://help.github.com/articles/fork-a-repo/"},"Fork")," gearbox repository ",(0,a.kt)("inlineCode",{parentName:"p"},"gogearbox/gearbox")," then clone it on your local machine using"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"git clone https://github.com/YOUR-USER_NAME/gearbox ")),(0,a.kt)("h4",{id:"according-to-github-naming-we-will-call-"},"According to GitHub naming we will call :"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The repository you have forked ",(0,a.kt)("strong",{parentName:"li"},"origin")," and its link is ",(0,a.kt)("inlineCode",{parentName:"li"},"https://github.com/YOUR-USER_NAME/gearbox ")),(0,a.kt)("li",{parentName:"ul"},"This repository ",(0,a.kt)("strong",{parentName:"li"},"upstream")," and its link is ",(0,a.kt)("inlineCode",{parentName:"li"},"https://github.com/gogearbox/gearbox "))),(0,a.kt)("h4",{id:"the-previous-steps-are-done-once-then-these-steps-that-you-should-follow-every-time-you-work-on-patches-or-features"},"The previous steps are done once, then these steps that you should follow every time you work on patch(es) or feature(s):"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Fetch code and create a local branch"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"git fetch upstream\ngit checkout -b LOCAL_BRANCH_NAME upstream/master\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Do your code changes then commit"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},'git commit -a -m "Issue #ISSUE_NUMBER: BRIEF_DESCRIPTION."\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Push commit you have made to your fork"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},'git push -u origin "LOCAL_BRANCH_NAME"\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Create a ",(0,a.kt)("a",{parentName:"p",href:"https://help.github.com/articles/using-pull-requests/"},"Pull Request(PR)")," to the branch ",(0,a.kt)("strong",{parentName:"p"},"master"),". To notify the reviewer that will review this PR, you can write r? @USER_NAME")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"After getting reviewers' feedback - if something needs to be changed, added, removed or fixed and these changes  are minor (means you didn't get ",(0,a.kt)("strong",{parentName:"p"},"r+"),", just fix it in a new commit on the same branch"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"git commit --fixup SHA1_OF_THE_PREVIOUS_COMMIT (You can get it using **git log**)\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Use step 3 to update the Pull Request. Repeat steps 5-6 until the review is accepted.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"When you notice that there is a change on ",(0,a.kt)("strong",{parentName:"p"},"upstream")," that affects your patch or files you have worked on, you need to update and rebase your local branch"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"git fetch upstream\ngit rebase upstream/master\n")))))}c.isMDXComponent=!0}}]);