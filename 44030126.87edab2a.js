(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{61:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return c})),r.d(t,"rightToc",(function(){return b})),r.d(t,"default",(function(){return p}));var n=r(2),o=r(6),a=(r(0),r(71)),i={id:"github-workflow",title:"GitHub workflow",sidebar_label:"GitHub workflow"},c={unversionedId:"github-workflow",id:"github-workflow",isDocsHomePage:!1,title:"GitHub workflow",description:"If you have never used git or GitHub, you may also need to check Hello World in GitHub Guides.",source:"@site/docs/github-workflow.md",permalink:"/docs/github-workflow",editUrl:"https://github.com/gogearbox/website/edit/master/docs/github-workflow.md",sidebar_label:"GitHub workflow",sidebar:"docs",previous:{title:"Cloning and Installing",permalink:"/docs/cloning-and-installing"},next:{title:"Contributing",permalink:"/docs/contributing"}},b=[],l={rightToc:b};function p(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"If you have ",Object(a.b)("strong",{parentName:"p"},"never")," used git or GitHub, you may also need to check ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://guides.github.com/activities/hello-world/"}),"Hello World in GitHub Guides"),"."),Object(a.b)("p",null,"Firstly, You need to ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://help.github.com/articles/fork-a-repo/"}),"Fork")," gearbox repository ",Object(a.b)("inlineCode",{parentName:"p"},"gogearbox/gearbox")," then clone it on your local machine using"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"git clone https://github.com/YOUR-USER_NAME/gearbox ")),Object(a.b)("h4",{id:"according-to-github-naming-we-will-call-"},"According to GitHub naming we will call :"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"The repository you have forked ",Object(a.b)("strong",{parentName:"li"},"origin")," and its link is ",Object(a.b)("inlineCode",{parentName:"li"},"https://github.com/YOUR-USER_NAME/gearbox ")),Object(a.b)("li",{parentName:"ul"},"This repository ",Object(a.b)("strong",{parentName:"li"},"upstream")," and its link is ",Object(a.b)("inlineCode",{parentName:"li"},"https://github.com/gogearbox/gearbox "))),Object(a.b)("h4",{id:"the-previous-steps-are-done-once-then-these-steps-that-you-should-follow-every-time-you-work-on-patches-or-features"},"The previous steps are done once, then these steps that you should follow every time you work on patch(es) or feature(s):"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Fetch code and create a local branch"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),"git fetch upstream\ngit checkout -b LOCAL_BRANCH_NAME upstream/master\n"))),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Do your code changes then commit"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),'git commit -a -m "Issue #ISSUE_NUMBER: BRIEF_DESCRIPTION."\n'))),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Push commit you have made to your fork"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),'git push -u origin "LOCAL_BRANCH_NAME"\n'))),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Create a ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://help.github.com/articles/using-pull-requests/"}),"Pull Request(PR)")," to the branch ",Object(a.b)("strong",{parentName:"p"},"master"),". To notify the reviewer that will review this PR, you can write r? @USER_NAME")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"After getting reviewers' feedback - if something needs to be changed, added, removed or fixed and these changes  are minor (means you didn't get ",Object(a.b)("strong",{parentName:"p"},"r+"),", just fix it in a new commit on the same branch"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),"git commit --fixup SHA1_OF_THE_PREVIOUS_COMMIT (You can get it using **git log**)\n"))),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Use step 3 to update the Pull Request. Repeat steps 5-6 until the review is accepted.")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"When you notice that there is a change on ",Object(a.b)("strong",{parentName:"p"},"upstream")," that affects your patch or files you have worked on, you need to update and rebase your local branch"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),"git fetch upstream\ngit rebase upstream/master\n")))))}p.isMDXComponent=!0},71:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return d}));var n=r(0),o=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function b(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=o.a.createContext({}),p=function(e){var t=o.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=p(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},m=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,l=b(e,["components","mdxType","originalType","parentName"]),u=p(r),m=n,d=u["".concat(i,".").concat(m)]||u[m]||s[m]||a;return r?o.a.createElement(d,c(c({ref:t},l),{},{components:r})):o.a.createElement(d,c({ref:t},l))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=m;var c={};for(var b in t)hasOwnProperty.call(t,b)&&(c[b]=t[b]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var l=2;l<a;l++)i[l]=r[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"}}]);